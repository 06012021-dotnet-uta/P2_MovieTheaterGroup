CREATE TABLE Roles(
	RoleId INT NOT NULL IDENTITY(1, 1),
	RoleName NVARCHAR(20) NOT NULL,
	PRIMARY KEY (RoleId)
);
CREATE TABLE Users(
	UserId INT NOT NULL IDENTITY(1, 1),
	Username NVARCHAR(30) NOT NULL,
	Passwd NVARCHAR(20) NOT NULL,
	FirstName NVARCHAR(20) NOT NULL,
	LastName NVARCHAR(20) NOT NULL,
	RoleId INT NOT NULL
	PRIMARY KEY (UserId),
	FOREIGN KEY (RoleId) REFERENCES Roles(RoleId)
);
CREATE TABLE Theater(
	TheaterId INT NOT NULL IDENTITY(1, 1),
	TheaterLoc NVARCHAR(25) NOT NULL,
	PRIMARY KEY (TheaterId)
);
CREATE TABLE Movies(
	MovieId NVARCHAR(30) NOT NULL,
	MovieName NVARCHAR(50) NOT NULL,
	PRIMARY KEY (MovieId)
);
CREATE TABLE Theater_Movies(
	MovieId NVARCHAR(30) NOT NULL,
	TheaterId INT NOT NULL,
	PRIMARY KEY (MovieId, TheaterId),
	FOREIGN KEY (TheaterId) REFERENCES Theater(TheaterId)
	FOREIGN KEY (MovieId) REFERENCES Movies(MovieId)
);
CREATE TABLE Schedule(
	ScheduleId INT NOT NULL IDENTITY(1, 1),
	TheaterId INT NOT NULL,
	MovieId NVARCHAR(30) NOT NULL,
	ShowingTime DATETIME NOT NULL,
	PRIMARY KEY (ScheduleId),
	FOREIGN KEY (TheaterId) REFERENCES Theater(TheaterId),
	FOREIGN KEY (MovieId) REFERENCES Movies(MovieId)
);
CREATE TABLE Rating(
	RatingId INT NOT NULL IDENTITY(1, 1),
	MovieId NVARCHAR(30) NOT NULL,
	UserId INT NOT NULL,
	Content INT NOT NULL,
	DateMade DATETIME NOT NULL,
	PRIMARY KEY (RatingId),
	FOREIGN KEY (UserId) REFERENCES Users(UserId),
	FOREIGN KEY (MovieId) REFERENCES Movies(MovieId)
);
CREATE TABLE Comment(
	CommentId INT NOT NULL IDENTITY(1, 1),
	MovieId NVARCHAR(30) NOT NULL,
	UserId INT NOT NULL,
	Content NVARCHAR(210) NOT NULL,
	DateMade DATETIME NOT NULL,
	PRIMARY KEY (CommentId),
	FOREIGN KEY (UserId) REFERENCES Users(UserId),
	FOREIGN KEY (MovieId) REFERENCES Movies(MovieId)
);

--DROP TABLE IF EXISTS Movies;
--DROP TABLE IF EXISTS Roles;
--DROP TABLE IF EXISTS Users;
--DROP TABLE IF EXISTS Theater;
--DROP TABLE IF EXISTS Theater_Movies;
--DROP TABLE IF EXISTS Schedule;
--DROP TABLE IF EXISTS Rating;
--DROP TABLE IF EXISTS Comment;