# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool: p1temp
  #vmImage: 'windows-latest'

variables:
  solution: 'MovieTheaterAPI/P2API/P2API.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: API
  jobs:
  - job: apijob
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'movietheatergroupp2'
        scannerMode: 'MSBuild'
        projectKey: 'MovieTheaterGroupP2_P2'
        projectName: 'P2'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/coburtura/coverage.xml'

    #- task: SonarCloudAnalyze@1

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(solution)'
        zipAfterPublish: true
        arguments:

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure subscription 1(4c353618-50cb-4075-901d-8208ba3b139d)'
        appType: 'apiApp'
        WebAppName: 'P2MovieTheaterGroupAPI'
        deployToSlotOrASE: true
        ResourceGroupName: 'P2'
        SlotName: 'production'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
- stage: Angular
  jobs:
  - job: angularjob
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    # - task: DeleteFiles@1
    #   inputs:
    #     contents: $(System.DefaultWorkingDirectory)/MovieTheaterUI/dist/sampleAPI/*

    # - script: |
    #     cd '$(System.DefaultWorkingDirectory)/**/MovieTheaterUI'
    #     npm install -g @angular/cli
    #     npm install -g
    #     ng build

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'S:\Users\Greg\Downloads\_work\2\s\MovieTheaterUI'
        customCommand: 'install -g @angular/cli'

    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'S:\Users\Greg\Downloads\_work\2\s\MovieTheaterUI'
        verbose: true

    - script: |
        cd '$(System.DefaultWorkingDirectory)\MovieTheaterUI'
        ng build

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure subscription 1(4c353618-50cb-4075-901d-8208ba3b139d)'
        appType: 'webApp'
        WebAppName: 'P2MovieTheaterGroup'
        packageForLinux: '$(System.DefaultWorkingDirectory)/MovieTheaterUI/dist/sampleAPI'